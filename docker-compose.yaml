# docker-compose run composer create-project laravel/laravel . - создать ларавел проект

# docker-compose up nginx -d - запуск
# чтобы всё работало во время сборки mysql контецнера не надо указывать свойство MYSQL_USER, либо указать, то которое
# отличается от root
# docker-compose up -d
# docker-compose down [--remove-orphans] [-v - удалить все собранные контейнеры]

# виды доступа к artisan:
# docker-compose exec php sh
# php artisan migrate

# docker-compose exec php php artisan migrate
# docker-compose run --rm artisan migrate - этот вариант работает без ошибок

services:
  nginx: # web server
    image: "nginx:stable-alpine"
    ports:
      - "8000:80" # делает так чтобы запрос на этом компьютере на 8000 порт шёл на 80 порт в контейнере
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./src:/var/www/laravel # связывает папку src и папку laravel в контейнере, в папке laravel обычно лежат
      # веб приложения написанные на laravel
    depends_on: # если написать docker-compose up nginx -d, то docker поднимет только нужные нам контейнеры, без
    # composer и artisan
      - mysql
      - php
  php:
    build:
      context: dockerfiles
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/laravel
  mysql:
    image: mysql:8.0
    ports:
      - "3316:3306"
    env_file:
      - ./env/mysql.env
    volumes:
      - db_data:/var/lib/mysql # без этого volume данные из бд будут исчезать после того как контейнер умрёт
      # тут ключевой момент заключается в том, что эта директива позволяет сделать так, чтобы данные сохранялись
      # на сервер физически, при этом всё ещё находясь в изолированном окружении /var/lib/docker/volumes/db_data/_data

      # данные НЕ ДУБЛИРУЮТСЯ, ставить mysql на vps НЕ НАДО

    # миграция внутри контейнера docker-compose exec php php artisan migrate
  composer: # docker-compose run composer create-project laravel/laravel . (для единичного запуска)
    build:
      context: dockerfiles
      dockerfile: composer.Dockerfile
    volumes:
      - ./src:/var/www/laravel
  # чтобы не создавать orphans контейнеры, надо юзать --rm флаг
  # docker-compose run --rm artisan inspire
  artisan:
    build: 
      context: dockerfiles
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/laravel
    entrypoint: ["php", "/var/www/laravel/artisan"]

volumes:
  db_data: